function getDefaultExportFromCjs(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function getAugmentedNamespace(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var r=function a(){return this instanceof a?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};r.prototype=e.prototype}else r={};Object.defineProperty(r,"__esModule",{value:true});Object.keys(t).forEach((function(e){var s=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(r,e,s.get?s:{enumerable:true,get:function(){return t[e]}})}));return r}var t={exports:{}};const e=/^https?:\/\//i;var lightweight$1=t=>{try{const{href:r}=new URL(t);return e.test(r)&&r}catch(t){return false}};var r={};function iter(t,e,r,s,o){var n,i=o?o+r:o;if(s==null)e&&(t[o]=s);else if(typeof s!="object")t[o]=s;else if(Array.isArray(s))for(n=0;n<s.length;n++)iter(t,e,r,s[n],i+n);else for(n in s)iter(t,e,r,s[n],i+n)}function flattie(t,e,r){var s={};typeof t=="object"&&iter(s,!!r,e||".",t,"");return s}r.flattie=flattie;class HTTPError extends Error{constructor(t,e,r){const s=t.status||t.status===0?t.status:"";const o=t.statusText||"";const n=`${s} ${o}`.trim();const i=n?`status code ${n}`:"an unknown error";super(`Request failed with ${i}`);Object.defineProperty(this,"response",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"request",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"options",{enumerable:true,configurable:true,writable:true,value:void 0});this.name="HTTPError";this.response=t;this.request=e;this.options=r}}class TimeoutError extends Error{constructor(t){super("Request timed out");Object.defineProperty(this,"request",{enumerable:true,configurable:true,writable:true,value:void 0});this.name="TimeoutError";this.request=t}}const isObject$1=t=>t!==null&&typeof t==="object";const validateAndMerge=(...t)=>{for(const e of t)if((!isObject$1(e)||Array.isArray(e))&&e!==void 0)throw new TypeError("The `options` argument must be an object");return deepMerge({},...t)};const mergeHeaders=(t={},e={})=>{const r=new globalThis.Headers(t);const s=e instanceof globalThis.Headers;const o=new globalThis.Headers(e);for(const[t,e]of o.entries())s&&e==="undefined"||e===void 0?r.delete(t):r.set(t,e);return r};const deepMerge=(...t)=>{let e={};let r={};for(const s of t)if(Array.isArray(s)){Array.isArray(e)||(e=[]);e=[...e,...s]}else if(isObject$1(s)){for(let[t,r]of Object.entries(s)){isObject$1(r)&&t in e&&(r=deepMerge(e[t],r));e={...e,[t]:r}}if(isObject$1(s.headers)){r=mergeHeaders(r,s.headers);e.headers=r}}return e};const s=(()=>{let t=false;let e=false;const r=typeof globalThis.ReadableStream==="function";const s=typeof globalThis.Request==="function";r&&s&&(e=new globalThis.Request("https://empty.invalid",{body:new globalThis.ReadableStream,method:"POST",get duplex(){t=true;return"half"}}).headers.has("Content-Type"));return t&&!e})();const o=typeof globalThis.AbortController==="function";const n=typeof globalThis.ReadableStream==="function";const i=typeof globalThis.FormData==="function";const u=["get","post","put","patch","head","delete"];const c={json:"application/json",text:"text/*",formData:"multipart/form-data",arrayBuffer:"*/*",blob:"*/*"};const l=2147483647;const h=Symbol("stop");const p={json:true,parseJson:true,searchParams:true,prefixUrl:true,retry:true,timeout:true,hooks:true,throwHttpErrors:true,onDownloadProgress:true,fetch:true};const f={method:true,headers:true,body:true,mode:true,credentials:true,cache:true,redirect:true,referrer:true,referrerPolicy:true,integrity:true,keepalive:true,signal:true,window:true,dispatcher:true,duplex:true};const normalizeRequestMethod=t=>u.includes(t)?t.toUpperCase():t;const d=["get","put","head","delete","options","trace"];const y=[408,413,429,500,502,503,504];const b=[413,429,503];const m={limit:2,methods:d,statusCodes:y,afterStatusCodes:b,maxRetryAfter:Number.POSITIVE_INFINITY,backoffLimit:Number.POSITIVE_INFINITY,delay:t=>.3*2**(t-1)*1e3};const normalizeRetryOptions=(t={})=>{if(typeof t==="number")return{...m,limit:t};if(t.methods&&!Array.isArray(t.methods))throw new Error("retry.methods must be an array");if(t.statusCodes&&!Array.isArray(t.statusCodes))throw new Error("retry.statusCodes must be an array");return{...m,...t,afterStatusCodes:b}};async function timeout(t,e,r,s){return new Promise(((o,n)=>{const i=setTimeout((()=>{r&&r.abort();n(new TimeoutError(t))}),s.timeout);void s.fetch(t,e).then(o).catch(n).then((()=>{clearTimeout(i)}))}))}async function delay(t,{signal:e}){return new Promise(((r,s)=>{if(e){e.throwIfAborted();e.addEventListener("abort",abortHandler,{once:true})}function abortHandler(){clearTimeout(o);s(e.reason)}const o=setTimeout((()=>{e?.removeEventListener("abort",abortHandler);r()}),t)}))}const findUnknownOptions=(t,e)=>{const r={};for(const s in e)s in f||s in p||s in t||(r[s]=e[s]);return r};class Ky{static create(t,e){const r=new Ky(t,e);const function_=async()=>{if(typeof r._options.timeout==="number"&&r._options.timeout>l)throw new RangeError(`The \`timeout\` option cannot be greater than ${l}`);await Promise.resolve();let t=await r._fetch();for(const e of r._options.hooks.afterResponse){const s=await e(r.request,r._options,r._decorateResponse(t.clone()));s instanceof globalThis.Response&&(t=s)}r._decorateResponse(t);if(!t.ok&&r._options.throwHttpErrors){let e=new HTTPError(t,r.request,r._options);for(const t of r._options.hooks.beforeError)e=await t(e);throw e}if(r._options.onDownloadProgress){if(typeof r._options.onDownloadProgress!=="function")throw new TypeError("The `onDownloadProgress` option must be a function");if(!n)throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");return r._stream(t.clone(),r._options.onDownloadProgress)}return t};const s=r._options.retry.methods.includes(r.request.method.toLowerCase());const o=s?r._retry(function_):function_();for(const[t,s]of Object.entries(c))o[t]=async()=>{r.request.headers.set("accept",r.request.headers.get("accept")||s);const n=await o;const i=n.clone();if(t==="json"){if(i.status===204)return"";const t=await i.clone().arrayBuffer();const r=t.byteLength;if(r===0)return"";if(e.parseJson)return e.parseJson(await i.text())}return i[t]()};return o}constructor(t,e={}){Object.defineProperty(this,"request",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"abortController",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"_retryCount",{enumerable:true,configurable:true,writable:true,value:0});Object.defineProperty(this,"_input",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"_options",{enumerable:true,configurable:true,writable:true,value:void 0});this._input=t;const r="credentials"in Request.prototype;this._options={credentials:r?this._input.credentials:void 0,...e,headers:mergeHeaders(this._input.headers,e.headers),hooks:deepMerge({beforeRequest:[],beforeRetry:[],beforeError:[],afterResponse:[]},e.hooks),method:normalizeRequestMethod(e.method??this._input.method),prefixUrl:String(e.prefixUrl||""),retry:normalizeRetryOptions(e.retry),throwHttpErrors:e.throwHttpErrors!==false,timeout:e.timeout??1e4,fetch:e.fetch??globalThis.fetch.bind(globalThis)};if(typeof this._input!=="string"&&!(this._input instanceof URL||this._input instanceof globalThis.Request))throw new TypeError("`input` must be a string, URL, or Request");if(this._options.prefixUrl&&typeof this._input==="string"){if(this._input.startsWith("/"))throw new Error("`input` must not begin with a slash when using `prefixUrl`");this._options.prefixUrl.endsWith("/")||(this._options.prefixUrl+="/");this._input=this._options.prefixUrl+this._input}if(o){this.abortController=new globalThis.AbortController;if(this._options.signal){const t=this._options.signal;this._options.signal.addEventListener("abort",(()=>{this.abortController.abort(t.reason)}))}this._options.signal=this.abortController.signal}s&&(this._options.duplex="half");this.request=new globalThis.Request(this._input,this._options);if(this._options.searchParams){const t=typeof this._options.searchParams==="string"?this._options.searchParams.replace(/^\?/,""):new URLSearchParams(this._options.searchParams).toString();const e="?"+t;const r=this.request.url.replace(/(?:\?.*?)?(?=#|$)/,e);!(i&&this._options.body instanceof globalThis.FormData||this._options.body instanceof URLSearchParams)||this._options.headers&&this._options.headers["content-type"]||this.request.headers.delete("content-type");this.request=new globalThis.Request(new globalThis.Request(r,{...this.request}),this._options)}if(this._options.json!==void 0){this._options.body=JSON.stringify(this._options.json);this.request.headers.set("content-type",this._options.headers.get("content-type")??"application/json");this.request=new globalThis.Request(this.request,{body:this._options.body})}}_calculateRetryDelay(t){this._retryCount++;if(this._retryCount<=this._options.retry.limit&&!(t instanceof TimeoutError)){if(t instanceof HTTPError){if(!this._options.retry.statusCodes.includes(t.response.status))return 0;const e=t.response.headers.get("Retry-After");if(e&&this._options.retry.afterStatusCodes.includes(t.response.status)){let t=Number(e);Number.isNaN(t)?t=Date.parse(e)-Date.now():t*=1e3;return this._options.retry.maxRetryAfter!==void 0&&t>this._options.retry.maxRetryAfter?0:t}if(t.response.status===413)return 0}const e=this._options.retry.delay(this._retryCount);return Math.min(this._options.retry.backoffLimit,e)}return 0}_decorateResponse(t){this._options.parseJson&&(t.json=async()=>this._options.parseJson(await t.text()));return t}async _retry(t){try{return await t()}catch(e){const r=Math.min(this._calculateRetryDelay(e),l);if(r!==0&&this._retryCount>0){await delay(r,{signal:this._options.signal});for(const t of this._options.hooks.beforeRetry){const r=await t({request:this.request,options:this._options,error:e,retryCount:this._retryCount});if(r===h)return}return this._retry(t)}throw e}}async _fetch(){for(const t of this._options.hooks.beforeRequest){const e=await t(this.request,this._options);if(e instanceof Request){this.request=e;break}if(e instanceof Response)return e}const t=findUnknownOptions(this.request,this._options);return this._options.timeout===false?this._options.fetch(this.request.clone(),t):timeout(this.request.clone(),t,this.abortController,this._options)}_stream(t,e){const r=Number(t.headers.get("content-length"))||0;let s=0;if(t.status===204){e&&e({percent:1,totalBytes:r,transferredBytes:s},new Uint8Array);return new globalThis.Response(null,{status:t.status,statusText:t.statusText,headers:t.headers})}return new globalThis.Response(new globalThis.ReadableStream({async start(o){const n=t.body.getReader();e&&e({percent:0,transferredBytes:0,totalBytes:r},new Uint8Array);async function read(){const{done:t,value:i}=await n.read();if(t)o.close();else{if(e){s+=i.byteLength;const t=r===0?0:s/r;e({percent:t,transferredBytes:s,totalBytes:r},i)}o.enqueue(i);await read()}}await read()}}),{status:t.status,statusText:t.statusText,headers:t.headers})}}const createInstance=t=>{const ky=(e,r)=>Ky.create(e,validateAndMerge(t,r));for(const e of u)ky[e]=(r,s)=>Ky.create(r,validateAndMerge(t,s,{method:e}));ky.create=t=>createInstance(validateAndMerge(t));ky.extend=e=>createInstance(validateAndMerge(t,e));ky.stop=h;return ky};const _=createInstance();var g=Object.freeze({__proto__:null,HTTPError:HTTPError,TimeoutError:TimeoutError,default:_});var w=getAugmentedNamespace(g);const T={FREE:"https://api.microlink.io/",PRO:"https://pro.microlink.io/"};const isObject=t=>t!==null&&typeof t==="object";const isBuffer=t=>t!=null&&t.constructor!=null&&typeof t.constructor.isBuffer==="function"&&t.constructor.isBuffer(t);const parseBody=(t,e,r)=>{try{return JSON.parse(t)}catch(s){const o=t||e.message;return{status:"error",data:{url:o},more:"https://microlink.io/efatalclient",code:"EFATALCLIENT",message:o,url:r}}};const factory$1=t=>({VERSION:e,MicrolinkError:r,urlHttp:s,got:o,flatten:n})=>{const assertUrl=(t="")=>{if(!s(t)){const e=`The \`url\` as \`${t}\` is not valid. Ensure it has protocol (http or https) and hostname.`;throw new r({status:"fail",data:{url:e},more:"https://microlink.io/einvalurlclient",code:"EINVALURLCLIENT",message:e,url:t})}};const mapRules=t=>{if(!isObject(t))return;const e=n(t);return Object.keys(e).reduce(((t,r)=>{t[`data.${r}`]=e[r].toString();return t}),{})};const fetchFromApi=async(e,s={})=>{try{const r=await o(e,s);return s.responseType===t?r:{...r.body,response:r}}catch(t){const{response:s={}}=t;const{statusCode:o,body:n,headers:i={},url:u=e}=s;const c=isBuffer(n);const l=isObject(n)&&!c?n:parseBody(c?n.toString():n,t,u);throw new r({...l,message:l.message,url:u,statusCode:o,headers:i})}};const getApiUrl=(e,{data:r,apiKey:s,endpoint:o,retry:i,cache:u,...c}={},{responseType:l="json",headers:h,...p}={})=>{const f=!!s;const d=o||T[f?"PRO":"FREE"];const y=`${d}?${new URLSearchParams({url:e,...mapRules(r),...n(c)}).toString()}`;const b=f?{...h,"x-api-key":s}:{...h};c.stream&&(l=t);return[y,{...p,responseType:l,cache:u,retry:i,headers:b}]};const createMql=t=>async(e,r,s)=>{assertUrl(e);const[o,n]=getApiUrl(e,r,{...t,...s});return fetchFromApi(o,n)};const i=createMql();i.extend=createMql;i.MicrolinkError=r;i.getApiUrl=getApiUrl;i.fetchFromApi=fetchFromApi;i.mapRules=mapRules;i.version=e;i.stream=o.stream;return i};var v=factory$1;const E=lightweight$1;const{flattie:R}=r;const{default:x}=w;const P=v("arrayBuffer");class MicrolinkError extends Error{constructor(t){super();this.name="MicrolinkError";Object.assign(this,t);this.description=this.message;this.message=this.code?`${this.code}, ${this.description}`:this.description}}const got=async(t,{responseType:e,...r})=>{try{r.timeout===void 0&&(r.timeout=false);const s=await x(t,r);const o=await s[e]();const{headers:n,status:i}=s;return{url:s.url,body:o,headers:n,statusCode:i}}catch(t){if(t.response){const{response:e}=t;t.response={...e,headers:Array.from(e.headers.entries()).reduce(((t,[e,r])=>{t[e]=r;return t}),{}),statusCode:e.status,body:await e.text()}}throw t}};got.stream=(...t)=>x(...t).then((t=>t.body));const q=P({MicrolinkError:MicrolinkError,urlHttp:E,got:got,flatten:R,VERSION:"0.13.5"});t.exports=q;var j=t.exports.arrayBuffer=q.extend({responseType:"arrayBuffer"});var A=t.exports.extend=q.extend;var C=t.exports.fetchFromApi=q.fetchFromApi;var O=t.exports.getApiUrl=q.getApiUrl;var k=t.exports.mapRules=q.mapRules;var S=t.exports.MicrolinkError=q.MicrolinkError;var U=t.exports.version=q.version;var N=t.exports;var L=getDefaultExportFromCjs(N);export{S as MicrolinkError,j as arrayBuffer,L as default,A as extend,C as fetchFromApi,O as getApiUrl,k as mapRules,U as version};

